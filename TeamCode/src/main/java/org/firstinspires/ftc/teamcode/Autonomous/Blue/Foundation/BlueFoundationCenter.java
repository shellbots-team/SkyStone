package org.firstinspires.ftc.teamcode.Autonomous.Blue.Foundation;

import com.qualcomm.robotcore.eventloop.opmode.Autonomous;

import org.firstinspires.ftc.teamcode.Autonomous.BasicFoundation;

/**
 * Created by shell on 10/26/2019.
 */

@Autonomous(group = "Blue:Foundation", name = "Blue: Foundation: Center")
public class BlueFoundationCenter extends BasicFoundation {

	double[] leftXValues  = new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.9499374, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -0.8915311, -0.507718, -0.0070922035, 0.0, 0.0, 0.0, -0.06549854, -0.20734254, -0.60784316, -0.6662495, -0.682937, -0.682937, -0.682937, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6912808, -0.6161869, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.06549854, -0.33249897, -0.55778056, -0.5994994, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.60784316, -0.54109305, -0.54109305, -0.507718, -0.49937424, -0.49937424, -0.14059241, -0.14059241, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0988736, 0.34084272, 0.76637465, 0.92490613, 0.92490613, 0.99165624, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.5494368, 0.14893617, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.073842295, 0.29078016, 0.4159366, 0.54109305, 0.6161869, 0.6412182, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.67459327, 0.682937, 0.6912808, 0.7079683, 0.7079683, 0.71631205, 0.7246558, 0.7246558, 0.7246558, 0.7329996, 0.7329996, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.7413434, 0.18231122, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
	double[] leftYValues  = new double[] {};
	double[] rightXValues = new double[] {0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0};
	boolean[] upDPadInputs      = new boolean[] {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false};
	boolean[] downDPadInputs     = new boolean[] {false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, true, true, true, true, true, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false};
	double[] time         = new double[] {120.863501, 22.897292999999998, 23.767242, 21.134012000000002, 22.919326, 24.517086, 23.037502, 21.141513, 24.004378, 21.613491, 22.827086, 24.973127, 22.848543999999997, 22.800158, 24.694793999999998, 21.377085, 23.612762, 48.621203, 92.02027, 21.233544, 20.414534000000003, 17.552605999999997, 20.614586, 20.433595999999998, 19.256304, 22.462815, 21.920314, 25.226149, 22.877346, 25.770211, 23.947606, 20.602814000000002, 21.859065, 21.482085, 22.002242000000003, 23.484585, 59.159433, 87.568394, 35.548754, 27.656566, 21.697711, 21.489689, 22.51068, 22.861304999999998, 27.746044, 26.429534, 25.176773, 31.836983, 20.866252, 21.609221, 22.182711, 20.974794000000003, 38.353181, 34.495211999999995, 72.001205, 25.092138, 23.351824999999998, 20.560783999999998, 21.860886999999998, 22.677242, 24.524065, 23.875211, 20.570991, 22.557137, 23.20693, 23.123908, 33.649691000000004, 22.386409, 22.621565, 22.532711, 27.978856999999998, 49.154328, 72.013132, 36.900212, 34.701774, 20.887241, 22.706981000000003, 23.772086, 23.498179, 22.457241999999997, 26.503805, 22.420471, 21.7462, 42.186827, 38.836567, 36.817399, 25.748701, 29.571721, 37.84167, 64.628496, 48.004536, 37.189795999999994, 35.480056000000005, 33.871097000000006, 20.777814, 21.422397999999998, 38.053129, 30.245366999999998, 23.786459999999998, 25.725887999999998, 21.658335, 32.839378, 31.124639, 31.169951, 33.174951, 47.575682, 23.304899, 22.992502, 26.695732, 23.428283, 41.321878999999996, 34.311045, 21.732866, 20.866512, 23.188231000000002, 31.281096, 22.936096, 23.205627999999997, 29.387659, 26.980679000000002, 30.614326000000002, 32.817086, 38.758962000000004, 50.566880000000005, 34.898753, 20.630105999999998, 27.344065, 23.850732, 19.867554, 20.794846, 24.294378, 22.793232, 24.403961, 31.765055, 24.008907999999998, 48.234066999999996, 44.239015, 55.454953, 44.332192, 39.245941, 23.014482, 22.984065, 23.739533, 21.659898000000002, 27.256201, 21.895263, 25.108284, 23.037919, 34.328077, 29.989587, 31.995211, 23.772294, 35.008285, 38.573806000000005, 29.259377999999998, 55.804328, 40.89766, 23.640314, 24.152346, 20.921565, 20.659273, 23.491512999999998, 27.175732, 23.425314999999998, 20.398596, 19.952866, 24.211044, 30.758753, 22.872502, 23.830315000000002, 27.318024, 26.495992, 49.316463, 58.157090000000004, 50.978755, 22.250366, 21.706564, 22.955836, 22.873023, 25.366252999999997, 26.676930000000002, 21.562086, 26.647242000000002, 22.755055, 26.685732, 21.657815, 22.539272999999998, 34.646618, 34.785472, 22.824377, 30.743076000000002, 36.411462, 56.330475, 22.987294, 24.454429, 24.904274, 23.366461, 24.039429000000002, 23.264534, 34.530993, 25.063544, 22.322605999999997, 28.193337, 21.044846, 23.083804999999998, 34.082816, 33.974847000000004, 29.929587, 32.451409, 38.300681000000004, 57.993651, 34.476826, 33.678389, 22.861669000000003, 23.202242000000002, 20.91094, 25.079533, 24.746721, 22.272398, 28.095003000000002, 22.649065, 20.689793, 45.57063, 31.479378000000004, 31.023545, 33.120419999999996, 29.131097, 20.842241, 39.888025, 22.453752, 43.943234, 23.060471, 21.869325, 21.643492000000002, 21.880106, 27.92068, 23.590367, 32.417086999999995, 22.376669, 30.941722000000002, 30.309222000000002, 27.889222, 28.860211, 31.872763, 36.063285, 22.025366, 37.489327, 33.38927399999999, 31.101826, 20.433075, 23.769429000000002, 22.624377000000003, 22.006721, 23.546982, 25.687189999999998, 46.400786, 41.106983, 37.507764, 33.710003, 48.025682, 34.684639000000004, 23.931252, 38.393233, 24.080784, 21.399794, 19.656096, 21.222867, 21.124897999999998, 22.986929999999997, 23.805106, 21.883126999999998, 26.111409, 27.361304999999998, 28.775576, 28.506566, 39.236253999999995, 29.850316, 28.078492, 34.238023999999996, 41.679119, 41.876567, 22.127815, 26.651252, 24.21469, 26.675939999999997, 25.708544, 20.127971000000002, 28.028492, 22.843856, 27.760732, 34.93266, 25.920002, 34.702347, 22.501617000000003, 29.671566, 29.027243000000002, 29.435523, 29.520419, 39.12464, 26.013804, 22.229846000000002, 21.554742, 22.936408, 22.973492, 22.891148, 21.851669, 22.840471, 25.115263, 40.900056, 33.304378, 42.780629, 20.961305, 28.305576, 29.563649, 29.699482, 30.122867, 39.167088, 25.637397999999997, 24.138076, 22.16594, 20.505991, 21.403959999999998, 23.56219, 21.811825, 23.625627, 25.516877, 43.711827, 21.748127, 36.831202, 40.796932, 50.063443, 38.993129, 34.408336999999996, 39.818181, 25.275575, 25.024325, 22.478127, 20.4187, 23.865159000000002, 23.743336, 23.211461, 35.99042, 29.826409, 23.362763, 26.813753, 35.658077000000006, 22.376877, 37.94766, 35.739014, 46.510785, 42.470942, 21.761981, 23.824794, 23.53068, 21.683805, 21.767867, 20.543387, 20.536303999999998, 25.363023, 23.19646, 29.686201, 21.636044000000002, 24.547449999999998, 30.217764000000003, 23.861149, 22.983648, 35.476619, 43.53214, 40.769014, 37.648963, 20.802711000000002, 35.584639, 38.765941, 34.365055, 35.557972, 22.771148, 40.215004, 32.091722000000004, 33.868441, 20.278491, 22.743909, 39.617921, 32.100784, 29.438544, 30.242711, 38.920056, 23.420887, 24.221877, 21.464637000000003, 27.436460999999998, 25.904794, 20.218960000000003, 21.735784000000002, 22.784638, 29.381096999999997, 52.214068000000005, 33.642554999999994, 23.855575, 24.341878, 41.637608, 23.220315, 31.016045, 31.165681, 37.210108, 21.31745, 22.670315, 22.941565, 20.585262, 23.199898, 26.046148000000002, 21.081200000000003, 21.470888000000002, 46.523859, 52.778131, 23.504742, 21.873283, 31.580733, 40.144692, 22.732242, 28.649274, 29.020159, 36.689795, 35.570836, 33.51917, 37.78516, 27.042763, 23.34495, 22.767189000000002, 27.637399, 20.117293, 20.831148000000002, 30.458804999999998, 23.759116, 23.560055, 30.980316000000002, 34.425836000000004, 22.498284, 55.526933, 51.61563, 31.535576000000002, 22.9362, 22.944794, 22.313283, 21.689637, 23.83594, 22.380106, 39.617608, 41.510681, 34.458389, 33.972972, 43.227244, 43.3399, 62.137402, 50.232661, 31.785888, 22.775367000000003, 33.320315, 21.75943, 20.670417999999998, 25.900053999999997, 31.907347, 20.828439, 30.294066, 24.097763, 23.880576, 30.648909, 26.532971, 28.10443, 21.260261999999997, 31.836878, 26.231148, 22.268283, 39.874692, 23.237970999999998, 21.617971, 47.432973000000004, 21.909325, 20.627138, 26.282868, 28.775368, 26.350367, 26.691513, 22.540784000000002, 22.403804, 30.065056, 25.233127, 28.034534, 22.696513000000003, 31.824534, 30.298337, 21.607815, 38.817972, 21.613075, 48.991672, 25.015524, 23.079638, 21.737346000000002, 32.676201, 26.801357000000003, 27.431721, 19.67995, 35.402035, 44.585212999999996, 26.41068, 24.243492, 26.812502, 34.778857, 19.793335, 35.337816000000004, 23.874169000000002, 23.524013, 22.634742, 23.241564999999998, 22.988596, 25.074326, 30.637711000000003, 25.482243, 34.850316, 19.684220999999997, 53.09912, 33.738441, 45.28589, 41.57141, 50.719953, 47.212348, 31.272971, 20.828856, 22.480315, 22.399221, 22.809480999999998, 31.346878, 21.987554, 30.718753000000003, 25.504586, 22.040263, 50.058391, 41.755473, 36.633493, 26.787346, 48.554848, 54.63813, 23.426408, 20.065158999999998, 32.660681, 24.365992, 39.105629, 21.564951, 30.479014, 30.177868, 20.296982, 21.200887, 23.476356, 23.262346, 24.748387, 21.594064, 24.883232000000003, 28.797867, 29.45943, 20.907763, 43.866775, 20.289116, 20.441773, 20.817086, 21.591929999999998, 35.625212000000005, 57.77985, 26.794326, 23.051878000000002, 36.354431, 24.180992, 25.287607, 26.023439999999997, 21.527554000000002, 21.580835, 31.565888, 31.759118000000004, 23.651878, 38.698128999999994, 26.763232000000002, 23.825524, 25.277711, 18.763126, 20.400313999999998, 65.976361, 39.501359, 36.589952000000004, 30.043701, 25.020211, 27.207972, 21.297501999999998, 24.180159, 27.646982, 30.345784000000002, 23.720055, 40.470785, 25.767398, 30.022243, 25.622034, 21.633699999999997, 23.626357000000002, 28.670576, 24.293753000000002, 26.156200000000002, 51.303338, 23.837189000000002, 28.369378, 26.037711, 21.922763, 22.412398, 28.702347, 28.854689999999998, 23.057971, 34.805316000000005, 23.853752};

	@Override
	protected double[] getLeftXValues() {
		return leftXValues;
	}

	@Override
	protected double[] getLeftYValues() {
		return leftYValues;
	}

	@Override
	protected double[] getRightXValues() {
		return rightXValues;
	}

	@Override
	public boolean[] getUpDPadInputs() {
		return upDPadInputs;
	}

	@Override
	public boolean[] getDownDPadInputs() {
		return downDPadInputs;
	}

	@Override
	protected double[] getTime() {
		return time;
	}
}